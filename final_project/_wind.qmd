```{python}


import numpy as np
import units as u
import numpy as np
from IPython.display import display, Markdown, Latex

# goal determine how much energy/power can be extratced via wind in Nigeria 
# determine how many turbines will be needed to do this, their heights, turbine diameters (design) etc 
# determine how much space will be needed 
# optimization problem => maximize energy out, minimize space, and (after introduce cost, minimize cost)

# ---
# given wind speeds / second / location => can create probaility distribution, and determine mean wind speed  in each location 


# maximalist case => put wind turbines everywhere at the design parameters that maximize the power output 
    # calculate standardized case, consider maximal case, then try to minimize differences between standard and max while cost optimizing, and increasing uniformity 
    # consider losses that occur: transmission, downtime, and array losses, and efficiencies
    

# identify areas where greatest percent of power being produced and optimize spacing in those areas, while considering where populations currently are 
    # when consider solar, should co-optimize solar 



# # 6.5, the Rayleigh distribytion gives the probability of observing a given wind speed, and is the Weibull frequency distribution inserting k = 2
# f(v) = (2*v/c**2) * np.exp( - (v/c)**2)

# # where c is the following 
# c = 2*V_m / np.sqrt(np.pi)
```

- Can get information on mean wind speeds from [Global Wind Atlas](https://globalwindatlas.info/en/area/Nigeria?download=print) or from [NOAA](https://www.emc.ncep.noaa.gov/emc_new.php)


### Evaluating a location based on standardized wind turbine values 
Assume rated power of turbine is equal to the mean wind speed?

```{python}
# determine the available resouce based on wind speed...

# power availability annualized => Eq 6.11

## --- atmosphereic values # TODO get real values 
V_m = _ # m/s # mean wind speed, will get this from a data source for different areas.
rho = 1.23 # kg/m^3 # air density, should be a function of turbine height 

## ---  turbine details #TODO find realistic value 
D_t = _ # m 


# 6.7, the swept area of a wind turbine 
A_t = np.pi * D_t**2 / 4

# 6.11, assuming a Rayleigh distribution of wind speeds, the mean power over time is 
# P_m = 1/2 * rho * A_t * np.sum(f(v) * v**3 )
P_m = (6/np.pi) * (0.5) * rho * A_t * V_m**3




```

### Given an area that produces significant annual wind resources, design a wind farm that maximizes power output 
```{python}

# -- want to maximize a given turbine's capacity factor, 

P_r = _ # kWh, rated power of the turbine 
D_t = _ # m, diameter of turbine 

# 6.28, generalized capacity factor equation 
CF = 0.087 * V_m - (P_r/D**2) # V_m should again be a function of height, and this should play a role..

# -- after maximizing capacity factor for a given turbine, are interested in how power and energy output look 

# 6.24, gross annual energy output and power output 
H = 8760 # non leap year hours in  a day 
P_t = P_r * CF
E_t = P_t * H 

# -- can check that turbine efficiency make sense 
# rotor efficiencies ~ turbine efficincy 
C_p = 0.45 # section 6.6.5
TE = P_t/ P_m # < C_p 

# -- observe size of the areas with high wind resource and determine max number of turbines could put there 

# 6.32, installed power density 
# rho_i = (P_r * n) / A_s

A_s = _ # m, area of space with V_m 
rho_i_compare = 20.5 # Table 6.4, mean installed power density of wind farms outside europe 
n =  (rho_i_compare/ P_r) * A_s 

# calculate power output of a given wind farm 
P_rf = n * P_r 



```

### Determine the available wind energy to the country after accounting for losses 

``` {python}

# account for losses 
L_td = _ # tranmission and distribution loss 
L_d = _ # downtime losses 
L_c = _ # curtailment losses 
L_a = _ # array losses 
pL_td = 1 - L_td/100 
pL_d = 1 - L_td/100 
pL_c = 1 - L_c/100
pL_a = 1 - L_a/100 
L_t = 100 * (1 - (pL_td * pL_d * pL_c * pL_a   ) )

P_rf_after_losses = P_rf * (1 - L_t)

# determine how much of the energy need this makes up, and examine under different scenarios..
```


### Determine number of turbines needed based on 